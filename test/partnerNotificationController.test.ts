/**
 * Shell SmartPay APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { PartnerNotificationController } from '../src';
import { testClient } from './testClient';
import { expectHeadersToMatch, makeApiCall } from './testHelper';

describe('PartnerNotificationController', () => {
  let controller : PartnerNotificationController;

  beforeAll(() => {
    controller = new PartnerNotificationController(testClient);
  });

  it('should Test PartnerToken', async () => {
    const grantType = 'client_credentials';

    const clientId = 'SOFflRakNlwnWlxfOXQ4GHDVyqGawuKA';

    const clientSecret = 'cRnWgw7gACqM3gVS';

    const response = await makeApiCall(
      () => controller.partnerToken(grantType, clientId, clientSecret)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });

  it('should Test FinaliseFueling', async () => {
    const response = await makeApiCall(
      () => controller.finaliseFueling(undefined)
    );

    expect(response.statusCode).toBe(200);
  });

  it('should Test CancelFueling', async () => {
    const response = await makeApiCall(
      () => controller.cancelFueling(undefined)
    );

    expect(response.statusCode).toBe(200);
  });
});
