/**
 * Shell EVLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema, string } from '../schema';

export interface MppError {
  /** Descriptive, human readable error message. Description of the error (e.g. This field is required and must to be between 1 and 255 characters long) */
  message?: string;
  /** Additional classification specific for each error type e.g. 'noStock'. The nature of the issue (e.g. missing) */
  reason?: string;
  /** Identifier of the related object e.g. '1'. The field/attribute with an issue (e.g. First Name) */
  subject?: string;
  /** Type of the object related to the error e.g. 'entry'. The item it relates to (e.g. Parameter) */
  subjectType?: string;
  /** Type of the error e.g. 'LowStockError', 'Validation Error' */
  type?: string;
}

export const mppErrorSchema: Schema<MppError> = object({
  message: ['message', optional(string())],
  reason: ['reason', optional(string())],
  subject: ['subject', optional(string())],
  subjectType: ['subjectType', optional(string())],
  type: ['type', optional(string())],
});
